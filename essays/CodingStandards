---
layout: essay
type: essay
title: "Beyond Indentation: How Coding Standards Shape Mastery and Collaboration in Software Engineering"
# All dates must be YYYY-MM-DD format!
date: 2025-02-13
published: true
labels:
  - Coding Standards
  - ESLint
  - VSCode
---

<img width="300px" class="rounded float-start pe-4" src="../img/SmartQuestions.jpg">

Coding standards often get dismissed as trivial rules about indentation, brace placement, or variablee naming conventions. However, I bbelieve they serve a much more important purpose. If I had to choose only one software engineering practice to improve code quality, it would be coding standards, since they are not just about style but they influence maintainability, collaboration, and even how we learn a programming language.

## Coding Standards as a Learning Tool

When learning a new language, sticking to established coding standards can accelerate comprehension. ESLint, for instance, enforces best practices in JavaScript and TypeScript, which makes it easier to recognize patterns, avoid common pitfalls, annd write more efficient and cleaner code. It also prevents bad habits from forming early on, making sure that code remains readable and functional even as projects grow in complexity. For example, ESLint flags unused variables and improper scoping, reinforcing JavaScript's lexical scopinig rules. Without these enforces standards, a beginner like me might repeatedly make subtle mistakes that lead to bugs and inefficiencies. Therefore, coding standards guide developes toward writing better code.

## My Experience with ESLint

After my first week using ESLint in VSCode, I have mixed feelings. At first, I had an overwhelming number of errors and warnings pop up, somtime for things that seemed insignificant. However, currently I am beginning to appreciate the discipline it enforces. The process of eliminating ESLint errors made me rethink how I structure my code. It forces me to consistently use 
